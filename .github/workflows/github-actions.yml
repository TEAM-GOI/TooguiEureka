# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to EC2 with toogui-msa

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # spring을 gradle을 통해 빌드
    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean build -x test
      working-directory: ./

    - name: Login to Docker Hub using Access Token
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Build and push backend image
      run: |
        docker build \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/toogui_back_eureka:latest \
          -f ./Dockerfile .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/toogui_back_eureka:latest

    # docker compose up
    - name: Deploy to EC2 server using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          # 최신 이미지 받기 + eureka 서비스만 교체
          sudo docker compose -f docker-compose-msa.yml pull backend-eureka
          sudo docker compose -f docker-compose-msa.yml up -d --no-deps backend-eureka
          docker image prune -f
